<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shopping Cart - Ecobazar</title>
    
    <!-- Include your existing stylesheets -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50">
    <%- include('../layouts/headerWithoutUser.ejs') %>

    <main class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8">Shopping Cart</h1>

        <% if (!cart || cart.items.length === 0) { %>
            <div class="text-center py-12">
                <i class="fas fa-shopping-cart text-6xl text-gray-300 mb-4"></i>
                <h2 class="text-2xl font-semibold text-gray-600 mb-4">Your cart is empty</h2>
                <a href="/shop" class="inline-block bg-green-500 text-white px-6 py-3 rounded-lg hover:bg-green-600 transition-colors">
                    Continue Shopping
                </a>
            </div>
        <% } else { %>
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                <!-- Cart Items -->
                <div class="lg:col-span-2">
                    <div class="bg-white rounded-lg shadow-sm">
                        <% cart.items.forEach(item => { %>
                            <div id="cart-item-<%= item.product._id %>" class="p-4 border-b last:border-b-0">
                                <div class="flex items-center gap-4">
                                    <img src="/uploads/products/<%= item.product.images[0].split('/').pop() %>" 
                                         alt="<%= item.product.name %>"
                                         class="w-24 h-24 object-cover rounded-lg">
                                    
                                    <div class="flex-1">
                                        <h3 class="font-semibold mb-2"><%= item.product.name %></h3>
                                        <div class="text-green-600 font-bold">₹<%= item.product.salePrice %></div>
                                        
                                        <!-- Stock Status Messages -->
                                        <% if (!item.stockStatus.inStock) { %>
                                            <div class="text-red-500 text-sm mt-2">
                                                <i class="fas fa-exclamation-circle"></i>
                                                Out of stock
                                            </div>
                                        <% } else if (!item.stockStatus.hasEnoughStock) { %>
                                            <div class="text-orange-500 text-sm mt-2">
                                                <i class="fas fa-exclamation-triangle"></i>
                                                Only <%= item.stockStatus.availableStock %> units available
                                            </div>
                                        <% } %>
                                        
                                        <div class="flex items-center gap-4 mt-4">
                                            <div class="flex items-center space-x-2">
                                                <button onclick="updateCartQuantity('<%= item.product._id %>', -1)" 
                                                        class="p-1 rounded-md hover:bg-gray-100"
                                                        <%= !item.stockStatus.inStock ? 'disabled' : '' %>>
                                                    <i class="fas fa-minus"></i>
                                                </button>
                                                <input type="number" 
                                                       value="<%= item.quantity %>" 
                                                       min="1" 
                                                       max="<%= item.stockStatus.maxAllowed %>"
                                                       data-product-id="<%= item.product._id %>"
                                                       data-price="<%= item.product.salePrice %>"
                                                       data-max-stock="<%= item.stockStatus.availableStock %>"
                                                       class="w-16 text-center border rounded-md <%= !item.stockStatus.hasEnoughStock ? 'border-orange-500' : '' %>"
                                                       readonly>
                                                <button onclick="updateCartQuantity('<%= item.product._id %>', 1)"
                                                        class="p-1 rounded-md hover:bg-gray-100"
                                                        <%= !item.stockStatus.hasEnoughStock || item.quantity >= item.stockStatus.maxAllowed ? 'disabled' : '' %>>
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                            
                                            <button onclick="removeFromCart('<%- item.product._id %>')"
                                                    class="text-red-500 hover:text-red-600">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>

                <!-- Cart Summary -->
                <div class="lg:col-span-1">
                    <div class="bg-white rounded-lg shadow-sm p-6">
                        <h2 class="text-xl font-semibold mb-4">Cart Summary</h2>
                        
                        <div class="space-y-3 mb-6">
                            <div class="flex justify-between">
                                <span>Subtotal</span>
                                <span class="subtotal-amount">₹<%= cart.total %></span>
                            </div>
                            <div class="flex justify-between text-green-600">
                                <span>Shipping</span>
                                <span>₹35</span>
                            </div>
                            <div class="border-t pt-3 flex justify-between font-bold">
                                <span>Total</span>
                                <span class="total-amount">₹<%= cart.total+35 %></span>
                            </div>
                        </div>

                        <a href="/checkout" 
                           class="block w-full bg-green-500 text-white text-center py-3 rounded-lg hover:bg-green-600 transition-colors">
                            Proceed to Checkout
                        </a>
                    </div>
                </div>
            </div>
        <% } %>
    </main>

    <%- include('../layouts/footer.ejs') %>

    <script>
        function updateCartQuantity(productId, change) {
            const quantityInput = document.querySelector(`input[data-product-id="${productId}"]`);
            const currentQuantity = parseInt(quantityInput.value);
            const maxStock = parseInt(quantityInput.getAttribute('data-max-stock'));
            const newQuantity = currentQuantity + change;

            // Check minimum quantity
            if (newQuantity < 1) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Minimum Quantity',
                    text: 'Quantity cannot be less than 1',
                    showConfirmButton: false,
                    timer: 1500
                });
                return;
            }

            // Check maximum quantity (5 or available stock)
            const maxAllowed = Math.min(5, maxStock);
            if (newQuantity > maxAllowed) {
                const message = maxStock < 5 ? 
                    `Only ${maxStock} units available in stock` : 
                    'Maximum 5 units allowed per item';
                
                Swal.fire({
                    icon: 'warning',
                    title: 'Quantity Limit Reached',
                    text: message,
                    showConfirmButton: false,
                    timer: 2000
                });
                return;
            }

            // Update quantity in database
            fetch('/cart/update', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId,
                    quantity: newQuantity
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update quantity input
                    quantityInput.value = newQuantity;
                    
                    // Update subtotal
                    const subtotalElement = document.querySelector('.subtotal-amount');
                    if (subtotalElement) {
                        subtotalElement.textContent = `₹${data.cart.total}`;
                    }

                    // Update total (subtotal + shipping)
                    const totalElement = document.querySelector('.total-amount');
                    if (totalElement) {
                        totalElement.textContent = `₹${data.cart.total + 35}`;
                    }

                    // Update cart count in header
                    const cartCountElement = document.querySelector('.cart-count');
                    if (cartCountElement) {
                        cartCountElement.textContent = data.cart.count;
                    }
                } else {
                    throw new Error(data.message || 'Error updating cart');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'An error occurred while updating the cart',
                    showConfirmButton: false,
                    timer: 2000
                });
                // Reset quantity input to previous value
                quantityInput.value = currentQuantity;
            });
        }

        function removeFromCart(productId) {
            Swal.fire({
                title: 'Remove Item?',
                text: 'Are you sure you want to remove this item from your cart?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#22C55E',
                cancelButtonColor: '#EF4444',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/cart/remove/${productId}`, {
                        method: 'DELETE'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Remove item element from DOM
                            const itemElement = document.querySelector(`#cart-item-${productId}`);
                            if (itemElement) {
                            itemElement.remove();
                            }

                            // Update subtotal
                            const subtotalElement = document.querySelector('.subtotal-amount');
                            if (subtotalElement) {
                                subtotalElement.textContent = `₹${data.cart.total}`;
                            }

                            // Update total (subtotal + shipping)
                            const totalElement = document.querySelector('.total-amount');
                            if (totalElement) {
                                totalElement.textContent = `₹${parseFloat(data.cart.total) + 35}`;
                            }

                            // Update cart count in header
                            const cartCountElement = document.querySelector('.cart-count');
                            if (cartCountElement) {
                                cartCountElement.textContent = data.cart.count;
                                cartCountElement.style.display = data.cart.count > 0 ? 'flex' : 'none';
                            }

                            // Show empty cart message if cart is empty
                            if (data.cart.count === 0) {
                                location.reload(); // Reload to show empty cart template
                            }

                            Swal.fire({
                                icon: 'success',
                                title: 'Item Removed',
                                text: 'Item has been removed from your cart',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        } else {
                            throw new Error(data.message || 'Error removing item from cart');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message || 'An error occurred while removing the item',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    });
                }
            });
        }
    </script>
</body>
</html> 