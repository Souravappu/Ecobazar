<div class="product-actions mt-6">
    <% if (product.quantity > 0) { %>
        <button onclick="addToCart('<%= product._id %>')"
                class="w-full md:w-auto bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center gap-2">
            <i class="fas fa-shopping-cart"></i>
            <span>Add to Cart</span>
        </button>
    <% } else { %>
        <button disabled
                class="w-full md:w-auto bg-gray-300 text-gray-500 px-6 py-3 rounded-lg cursor-not-allowed flex items-center justify-center gap-2">
            <i class="fas fa-ban"></i>
            <span>Out of Stock</span>
        </button>
    <% } %>
</div>

<div class="mt-4 space-y-2">
    <div class="flex items-center text-gray-600">
        <span class="font-medium">Unit Type:</span>
        <span class="ml-2">
            <%= product.unit === 'kg' ? 'Kilogram (KG)' : 'Numbers (PCS)' %>
        </span>
    </div>
    <div class="flex items-center text-gray-600">
        <span class="font-medium">
            <%= product.unit === 'kg' ? 'Weight per Unit:' : 'Pieces per Unit:' %>
        </span>
        <span class="ml-2">
            <%= product.unitQuantity %> <%= product.unit === 'kg' ? 'kg' : 'pcs' %>
        </span>
    </div>
    <div class="flex items-center text-gray-600">
        <span class="font-medium">Available Stock:</span>
        <span class="ml-2 <%= product.quantity > 0 ? 'text-green-600' : 'text-red-600' %>">
            <%= product.quantity %> <%= product.unit === 'kg' ? 'units' : 'packs' %>
        </span>
    </div>
</div>

<script>
    function addToCart(productId) {
        // Check if user is logged in first
        fetch('/check-auth')
            .then(response => response.json())
            .then(data => {
                if (!data.authenticated) {
                    Swal.fire({
                        title: 'Please Login',
                        text: 'You need to login to add items to cart',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonText: 'Login',
                        cancelButtonText: 'Cancel',
                        confirmButtonColor: '#22C55E',
                        cancelButtonColor: '#6B7280'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/login';
                        }
                    });
                    return;
                }

                // Proceed with adding to cart
                fetch('/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity: 1 })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Update cart count in header
                        const cartCountElement = document.querySelector('.cart-count');
                        if (cartCountElement && data.cart) {
                            cartCountElement.textContent = data.cart.count;
                            cartCountElement.style.display = data.cart.count > 0 ? 'flex' : 'none';
                        }
                        
                        // Show success message
                        Swal.fire({
                            icon: 'success',
                            title: 'Added to Cart!',
                            text: 'Product has been added to your cart',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else {
                        throw new Error(data.message);
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: error.message || 'Error adding product to cart',
                        confirmButtonColor: '#22C55E'
                    });
                });
            })
            .catch(error => {
                console.error('Auth check error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while checking authentication',
                    confirmButtonColor: '#22C55E'
                });
            });
    }
</script> 