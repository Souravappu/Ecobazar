<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Address</title>
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-fadeIn {
            animation: fadeIn 0.5s ease-out forwards;
        }

        .input-focus-effect:focus {
            box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.2);
        }

        .nav-item.active {
            background: linear-gradient(to right, #10b981, #059669);
            color: white;
        }

        .animate-fade-in-down {
            animation: fadeInDown 0.5s ease-out forwards;
        }

        @keyframes fadeInDown {
            0% {
                opacity: 0;
                transform: translateY(-20px);
            }
            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .input-wrapper {
            margin-bottom: 1.5rem;
        }

        .error-message {
            font-size: 0.75rem;
            margin-top: 0.25rem;
            transition: all 0.3s ease;
        }

        input:focus {
            outline: none;
            box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.2);
        }

        input.border-red-500:focus {
            box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.2);
        }
    </style>
</head>

<body class="bg-gray-50 min-h-screen flex flex-col">
    <%- include('../layouts/headerWithoutUser.ejs') %>

    <main class="flex-grow">
        <div class="container mx-auto px-4 py-8">
            <!-- Breadcrumb -->
            <div class="border-b border-gray-200 pb-4 mb-8">
                <nav class="flex" aria-label="Breadcrumb">
                    <ol class="flex items-center space-x-4">
                        <li>
                            <a href="/" class="text-gray-400 hover:text-gray-500">Home</a>
                        </li>
                        <li class="flex items-center">
                            <svg class="h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M5.555 17.776l8-16 .894.448-8 16-.894-.448z" />
                            </svg>
                            <a href="/address" class="ml-4 text-gray-400 hover:text-gray-500">Address</a>
                        </li>
                        <li class="flex items-center">
                            <svg class="h-5 w-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M5.555 17.776l8-16 .894.448-8 16-.894-.448z" />
                            </svg>
                            <span class="ml-4 text-gray-500">Add New Address</span>
                        </li>
                    </ol>
                </nav>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-12 gap-6">
                <!-- Sidebar -->
                <div class="md:col-span-3">
                    <%- include('../layouts/profileSidebar.ejs', { currentPage: 'address' }) %>
                </div>

                <!-- Form Container -->
                <div class="md:col-span-9">
                    <div class="bg-white rounded-2xl shadow-2xl p-6 sm:p-8 animate-fadeIn">
                        <h2 class="text-2xl font-bold text-gray-900 mb-6">Add New Address</h2>

                        <% if (error && error.length > 0) { %>
                        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-6" role="alert" id="error-message">
                            <strong class="font-bold">Error!</strong>
                            <span class="block sm:inline"><%= error %></span>
                            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                                <svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" onclick="document.getElementById('error-message').style.display='none'">
                                    <title>Close</title>
                                    <path d="M14.348 5.652a1 1 0 00-1.414-1.414L10 7.172 7.066 4.238a1 1 0 10-1.414 1.414L8.586 10l-2.934 2.934a1 1 0 101.414 1.414L10 12.828l2.934 2.934a1 1 0 101.414-1.414L11.414 10l2.934-2.934z" />
                                </svg>
                            </span>
                        </div>
                        <% } %> 

                        <% if (success_msg.length > 0) { %>
                        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-6" role="alert" id="success-message">
                            <strong class="font-bold">Sent!</strong>
                            <span class="block sm:inline"><%= success_msg %></span>
                            <span class="absolute top-0 bottom-0 right-0 px-4 py-3">
                                <svg class="fill-current h-6 w-6 text-green-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" onclick="document.getElementById('success-message').style.display='none'">
                                    <title>Close</title>
                                    <path d="M14.348 5.652a1 1 0 00-1.414-1.414L10 7.172 7.066 4.238a1 1 0 10-1.414 1.414L8.586 10l-2.934 2.934a1 1 0 101.414 1.414L10 12.828l2.934 2.934a1 1 0 101.414-1.414L11.414 10l2.934-2.934z" />
                                </svg>
                            </span>
                        </div>
                        <% } %>

                        <form action="/profile/add-address" method="POST" class="space-y-6">                       
                            <div class="flex space-x-4">
                                <label class="flex-1">
                                    <input type="radio" name="addressType" value="Home" class="sr-only peer" checked>
                                    <div class="p-4 text-center rounded-lg border-2 cursor-pointer transition-all peer-checked:border-green-500 peer-checked:bg-green-50 hover:border-green-200">
                                        <i class="fas fa-home mb-2 text-xl text-green-500"></i>
                                        <p class="font-medium">Home</p>
                                    </div>
                                </label>
                                <label class="flex-1">
                                    <input type="radio" name="addressType" value="Office" class="sr-only peer">
                                    <div class="p-4 text-center rounded-lg border-2 cursor-pointer transition-all peer-checked:border-green-500 peer-checked:bg-green-50 hover:border-green-200">
                                        <i class="fas fa-building mb-2 text-xl text-green-500"></i>
                                        <p class="font-medium">Office</p>
                                    </div>
                                </label>
                                <label class="flex-1">
                                    <input type="radio" name="addressType" value="Other" class="sr-only peer">
                                    <div class="p-4 text-center rounded-lg border-2 cursor-pointer transition-all peer-checked:border-green-500 peer-checked:bg-green-50 hover:border-green-200">
                                        <i class="fas fa-archway mb-2 text-xl text-green-500"></i>
                                        <p class="font-medium">Others</p>
                                    </div>
                                </label>
                            </div>

                            <!-- Address Details -->
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div class="col-span-2">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Full Name</label>
                                    <input type="text" name="name" value="<%= oldValue.name || '' %>" 
                                           class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 input-focus-effect">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
                                    <input type="tel" name="phone" value="<%= oldValue.phone || '' %>" 
                                           class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 input-focus-effect">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Postal Code</label>
                                    <input type="text" name="postalCode" value="<%= oldValue.postalCode || '' %>" 
                                           class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 input-focus-effect">
                                </div>
                                <div class="col-span-2">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Street Address</label>
                                    <input type="text" name="street" value="<%= oldValue.street || '' %>" 
                                           class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 input-focus-effect">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Apartment/Suite</label>
                                    <input type="text" name="apartment" value="<%= oldValue.apartment || '' %>" 
                                           class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 input-focus-effect">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Landmark</label>
                                    <input type="text" name="landMark" value="<%= oldValue.landMark || '' %>" 
                                           class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 input-focus-effect">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">City</label>
                                    <input type="text" name="city" value="<%= oldValue.city || '' %>" 
                                           class="w-full px-4 py-3 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 input-focus-effect">
                                </div>
                            </div>

                            <!-- Buttons -->
                            <div class="flex justify-end space-x-4 pt-6">
                                <a href="/address" class="px-6 py-3 rounded-md text-gray-700 bg-gray-100 hover:bg-gray-200 transition duration-300">Cancel</a>
                                <button type="submit" class="px-6 py-3 rounded-md text-white bg-green-600 hover:bg-green-700 transition duration-300 transform hover:-translate-y-1 hover:shadow-md">
                                    Save Address
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <%- include('../layouts/footer.ejs') %>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const formFields = document.querySelectorAll('input, select');
            const form = document.querySelector('form');
            
            // Create error message container for each input
            formFields.forEach((field, index) => {
                const wrapper = document.createElement('div');
                wrapper.className = 'input-wrapper relative';
                
                // Create error message element
                const errorSpan = document.createElement('span');
                errorSpan.className = 'error-message text-red-500 text-xs absolute -bottom-5 left-0 hidden';
                
                // Wrap input in container
                field.parentNode.insertBefore(wrapper, field);
                wrapper.appendChild(field);
                wrapper.appendChild(errorSpan);
                
                // Add animation
                setTimeout(() => {
                    wrapper.classList.add('animate-fadeIn');
                }, index * 100);
            });

            const validateField = (input) => {
                const value = input.value.trim();
                const errorSpan = input.nextElementSibling;
                let isValid = true;
                let errorMessage = '';

                const showError = (message) => {
                    isValid = false;
                    errorMessage = message;
                    input.classList.add('border-red-500', 'focus:border-red-500', 'focus:ring-red-500');
                    errorSpan.textContent = message;
                    errorSpan.classList.remove('hidden');
                };

                const clearError = () => {
                    input.classList.remove('border-red-500', 'focus:border-red-500', 'focus:ring-red-500');
                    input.classList.add('border-gray-300', 'focus:border-green-500', 'focus:ring-green-500');
                    errorSpan.classList.add('hidden');
                };

                switch(input.name) {
                    case 'name':
                        if (!value) {
                            showError('Full name is required');
                        } else if (value.length < 3) {
                            showError('Name must be at least 3 characters');
                        } else if (!/^[A-Za-z\s]{3,50}$/.test(value)) {
                            showError('Name should contain only letters and spaces');
                        } else {
                            clearError();
                        }
                        break;

                    case 'phone':
                        if (!value) {
                            showError('Phone number is required');
                        } else if (!/^\d{10}$/.test(value)) {
                            showError('Enter a valid 10-digit phone number');
                        } else {
                            clearError();
                        }
                        break;

                    case 'street':
                        if (!value) {
                            showError('Street address is required');
                        } else if (value.length < 5) {
                            showError('Street address must be at least 5 characters');
                        } else {
                            clearError();
                        }
                        break;

                    case 'city':
                        if (!value) {
                            showError('City is required');
                        } else if (!/^[A-Za-z\s]{3,30}$/.test(value)) {
                            showError('City should contain only letters and spaces');
                        } else {
                            clearError();
                        }
                        break;

                    case 'postalCode':
                        if (!value) {
                            showError('Postal code is required');
                        } else if (!/^\d{6}$/.test(value)) {
                            showError('Enter a valid 6-digit postal code');
                        } else {
                            clearError();
                        }
                        break;

                    default:
                        clearError();
                }

                return isValid;
            };

            // Add input event listeners
            formFields.forEach(field => {
                if (field.type === 'radio') return;
                
                // Validate on input
                field.addEventListener('input', () => {
                    validateField(field);
                });

                // Validate on blur
                field.addEventListener('blur', () => {
                    validateField(field);
                });

                // Remove spaces on input
                field.addEventListener('input', (e) => {
                    if (e.target.name === 'phone' || e.target.name === 'postalCode') {
                        e.target.value = e.target.value.replace(/\s/g, '');
                    }
                });
            });

            // Form submission
            form.addEventListener('submit', async (e) => {
                e.preventDefault();
                let isValid = true;

                // Validate all fields
                formFields.forEach(field => {
                    if (field.type === 'radio') return;
                    if (!validateField(field)) {
                        isValid = false;
                    }
                });

                if (!isValid) {
                    // Show error toast
                    const errorToast = document.createElement('div');
                    errorToast.className = 'fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50 animate-fade-in-down';
                    errorToast.textContent = 'Please fix the errors before submitting';
                    document.body.appendChild(errorToast);
                    setTimeout(() => errorToast.remove(), 3000);
                    return;
                }

                try {
                    const formData = new FormData(form);
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'Accept': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    // Show success message and redirect
                    const successToast = document.createElement('div');
                    successToast.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded shadow-lg z-50 animate-fade-in-down';
                    successToast.textContent = 'Address added successfully!';
                    document.body.appendChild(successToast);
                    
                    setTimeout(() => {
                        window.location.href = '/address';
                    }, 1000);

                } catch (error) {
                    console.error('Error:', error);
                    // Show error toast
                    const errorToast = document.createElement('div');
                    errorToast.className = 'fixed top-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50 animate-fade-in-down';
                    errorToast.textContent = 'An error occurred. Please try again.';
                    document.body.appendChild(errorToast);
                    setTimeout(() => errorToast.remove(), 3000);
                }
            });
        });
    </script>
</body>
</html>